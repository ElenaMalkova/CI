image: busybox:latest

stages:
  - build
  - test
  - deploy
  - stop
  - stop previous jobs

variables:
  IMAGE_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  CI_DEBUG_TRACE: "true"

include:
  local: 'smoke.gitlab-ci.yml'
  remote: 'https://gitlab.com/ci-cd5742805/cicd-templates/-/blob/main/lint-test-job.yml'

cache:
  key:
    files:
      - composer.lock
  paths:
    - vendor/

before_script:
  - echo "Before script section"
  - echo "For example you might run an update here or install a build dependency"
  - echo "Or perhaps you might print out some debuggin details"

after_script:
  - echo "After script section"
  - echo "For example you might do some cleanup here"

build1:
  stage: build
  script:
    - echo "Do your build here"
    - echo one >> house.txt
    - mkdir -p vendor/
    - echo "build" > vendor/hello.txt

docker build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
    - echo $GITLAB_CI_USER $GITLAB_CI_PASSWORD $CI_REGISTRY $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker build . -t $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

test1:
  stage: test
  script:
    - echo "Do a test here"
    - echo "For example run a test suite"
    - sleep 10

test2:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
    - echo "Do another parallel test here"
    - echo "For example run a lint test"
    - docker run $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker ps -a
    - echo "---------TEST DOCKER IMAGE---------"

deploy to stage:
  stage: deploy
  variables:
    TARGET_ENV: staging
  script:
    - echo "Do you deploy here to ${TARGET_ENV}"
    - echo "${DB_SERVER}"
  only:
    - main
  environment:
    name: staging
    on_stop: stop to staging
    auto_stop_in: 1 day

stop to staging:
  stage: stop
  variables:
    TARGET_ENV: staging
  script:
    - echo "STOP ${TARGET_ENV}"
  only:
    - main
  when: manual
  environment:
    name: staging
    action: stop

deploy to prod:
  stage: deploy
  variables:
    TARGET_ENV: prod
  script:
    - echo "Do you deploy here to ${TARGET_ENV}"
    - echo "${DB_SERVER}"
  only:
    - main
  when: manual
  environment:
    name: prod
